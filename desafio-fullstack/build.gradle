buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.involves'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
	compile 'org.mongodb:mongo-java-driver:3.7.0'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.0.0'
}

task npmInstall(type:Exec) {
    workingDir 'react'
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}

task npmStart(type:Exec, dependsOn:npmInstall) {
    workingDir 'react'
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
    	commandLine 'npm.cmd', 'start'
	} else {
	    commandLine 'npm', 'start'
	}
}